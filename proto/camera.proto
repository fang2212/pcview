syntax = "proto3";

package minieye;

// 图像拓展信息
message CameraFrameExtendedInfo {
	uint32 seq                 = 1;   // 图像序号
	uint32 frame_type          = 2;   // 帧类型，0：MJPEG, 1：H264, 2：H265 3: NV12
	int32 data_size            = 3;   // 图像数据大小
	int32 width                = 4;   // 图像宽
	int32 height               = 5;   // 图像高

	uint32 fsync_ads_sec       = 6;   // Fsync曝光信号触发的时刻，数据面时间，秒
	uint32 fsync_ads_nsec      = 7;   // Fsync曝光信号触发的时刻，数据面时间，纳秒
	uint32 fsync_gnss_sec      = 8;   // Fsync曝光信号触发的时刻，管理面时间，秒
	uint32 fsync_gnss_nsec     = 9;   // Fsync曝光信号触发的时刻，管理面时间，纳秒

	uint32 exp_start_ads_sec   = 10;  // 图像曝光开始的时刻，数据面时间，秒
	uint32 exp_start_ads_nsec  = 11;  // 图像曝光开始的时刻，数据面时间，纳秒
	uint32 exp_start_gnss_sec  = 12;  // 图像曝光开始的时刻，管理面时间，秒
	uint32 exp_start_gnss_nsec = 13;  // 图像曝光开始的时刻，管理面时间，纳秒

	uint32 exp_end_ads_sec     = 14;  // 图像曝光结束的时刻，数据面时间，秒
	uint32 exp_end_ads_nsec    = 15;  // 图像曝光结束的时刻，数据面时间，纳秒
	uint32 exp_end_gnss_sec    = 16;  // 图像曝光结束的时刻，管理面时间，秒
	uint32 exp_end_gnss_nsec   = 17;  // 图像曝光结束的时刻，管理面时间，纳秒

	uint32 shutter_1           = 18;  // 图像大像素曝光持续时间，微秒
	uint32 shutter_2           = 19;  // 图像小像素曝光持续时间，微秒

	bytes image_supplement     = 20;  // 图像附加描述信息, 跟平台相关, 可强转对应的结构体
}

/*
   {
     "topic": "camera",
     "dds_mode": "shm",
     "data_refresh_rate": 20,
	 "buff_num": 10,
     "elem_max_size": 2000
   } 
*/
message CameraFrame {
	uint32 camera_id = 1;                       // camera id (CameraID) 
	uint64 timestamp = 2;                       // 时戳, microseconds
	uint64 tick = 3;                            // 异构设备上的时钟
	uint64 frame_id = 4;                        // 帧号
	repeated uint64 image_plane_addr = 5;       // 图像物理地址        
	uint32 image_width = 6;                     // 图像宽度 
	uint32 image_height = 7;                    // 图像高度
	uint32 stride = 8;                          // 单行步长 
	uint32 image_type = 9;                      // bgr = 0 / rgb = 1 / yuvnv21 = 2
	bytes image_supplement = 10;                // 图像附加描述信息, e.g image_pyramids 跟平台相关, 可强转对应的结构体 
	CameraFrameExtendedInfo extended_info = 11; // 图像拓展信息
}

// 图像格式 
enum ImageFormat {
  FORMAT_UNKNOWN = 0;
  GRAY = 1;
  YV12 = 2;
  JPEG = 3;
  PNG = 4;
  CR12 = 5;
  BAD = 6;
  NV12 = 7;
  NV21 = 8;
  BYPASS_ONLY = 9;
}

// 安装方位 (可以组合)
enum CamDirect {
	DIRECT_UNKNOWN = 0;
	FRONT = 1;
	REAR  = 2;
	LEFT  = 4;
	RIGHT = 8;
}

// 摄像头fov角度
enum CamFov {
	kFovUnknown = 0;
	kFov30 = 1;
	kFov100 = 2;
}

// 摄像头ID (通过位置和fov表征)
message CamID {
	/* 0x1 -> front, 0x2 -> rear, 0x4 -> left, 0x8 -> right
	 * 0x1 | 0x4 -> left and front
	 * 0x2 | 0x4 -> left and rear
	 * 0x1 | 0x8 -> right and front
	 * 0x2 | 0x8 -> right and rear
	 */
	int32 cam_direct = 1; // 安装位置
	CamFov fov = 2; // fov描述 
	int32 id = 3;  // 扩展字段(可以直接用此字段表示camera个体)
}

enum ProjectionModel {
	PRJ_MODEL_UNKNOWN = 0;
	FISHEYE = 1;
	MEI = 2;
	PIN_HOLE = 3;
	ATAN = 4;
	DAVIDE_SCARAMUZZA = 5;
}

// 变换矩阵
message TransMatrix {
	repeated float vcsgnd2img   = 1;             // 车身转图像 3x3
	repeated float img2vcsgnd   = 2;             // 图像转车身 3x3
	repeated float local2img    = 3;             // 局部世界坐标系转图像 3x3
	repeated float img2local    = 4;             // 图像转局部世界坐标系 3x3
}

// front : x, left : y, up: z 
message CameraParam {
	float focal_u                      = 1;                        // 归一化焦距
	float focal_v                      = 2;                        // 归一化焦距
	float cu                           = 3;                        // 光心
	float cv                           = 4;                        // 光心
	repeated float pos                 = 5;                        // 车身坐标系下坐标(vcs) (x, y, z)
	float pitch                        = 6;                        // 俯仰角 (vcs) 
	float yaw                          = 7;                        // 偏航角 (vcs)
	float roll                         = 8;                        // 横滚角 (vcs)
	float fov                          = 9;                        // 视场角
	int32 image_format                 = 10;                       // 图像格式 [ImageFormat]
	string isp_ver                     = 11;                       // isp version 
	int32 install_direction            = 12;                       // 安装方位 (CamDirect的组合) 
	TransMatrix trans_mtx              = 13;                       // 变换矩阵
	ProjectionModel prj_model          = 14;                       // 投影模型 
	uint32 image_width                 = 15;                       // 像素宽度
	uint32 image_height                = 16;                       // 像素高度
	repeated double distort_coeffs     = 17;                       // 畸变系数 (k1, k2, k3, p1, p2) 
	uint32 camera_id                   = 18;                       // camera id
}
