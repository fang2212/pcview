# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: road_seg.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import camera_pb2 as camera__pb2
import calib_param_pb2 as calib__param__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0eroad_seg.proto\x12\x0cminieye.lane\x1a\x0c\x63\x61mera.proto\x1a\x11\x63\x61lib_param.proto\"b\n\nLaneSegReq\x12*\n\x0c\x63\x61mera_frame\x18\x01 \x01(\x0b\x32\x14.minieye.CameraFrame\x12(\n\x0b\x63\x61lib_param\x18\x02 \x01(\x0b\x32\x13.minieye.CalibParam\"r\n\x0bScaleWindow\x12\x0f\n\x07scale_x\x18\x01 \x01(\x02\x12\x0f\n\x07scale_y\x18\x02 \x01(\x02\x12\x10\n\x08offset_x\x18\x03 \x01(\x02\x12\x10\n\x08offset_y\x18\x04 \x01(\x02\x12\r\n\x05width\x18\x05 \x01(\x05\x12\x0e\n\x06height\x18\x06 \x01(\x05\"\xa1\x01\n\x07SegMask\x12\x0c\n\x04mask\x18\x01 \x01(\x04\x12+\n\x08seg_info\x18\x02 \x01(\x0b\x32\x19.minieye.lane.ScaleWindow\x12\x16\n\x0eseg_supplement\x18\x03 \x01(\x0c\x12\r\n\x05label\x18\x04 \x01(\t\x12\x0e\n\x06offset\x18\x05 \x01(\x04\x12\x11\n\tdata_type\x18\x06 \x01(\x05\x12\x11\n\tbuff_size\x18\x07 \x01(\x04\"\xa4\x01\n\x0eLaneSegResMeta\x12\'\n\x08seg_mask\x18\x01 \x03(\x0b\x32\x15.minieye.lane.SegMask\x12-\n\x0bseg_context\x18\x02 \x01(\x0b\x32\x18.minieye.lane.LaneSegReq\x12\x12\n\nstart_time\x18\x03 \x01(\x04\x12\x13\n\x0b\x66inish_time\x18\x04 \x01(\x04\x12\x11\n\tshm_index\x18\x05 \x01(\x04\x62\x06proto3')



_LANESEGREQ = DESCRIPTOR.message_types_by_name['LaneSegReq']
_SCALEWINDOW = DESCRIPTOR.message_types_by_name['ScaleWindow']
_SEGMASK = DESCRIPTOR.message_types_by_name['SegMask']
_LANESEGRESMETA = DESCRIPTOR.message_types_by_name['LaneSegResMeta']
LaneSegReq = _reflection.GeneratedProtocolMessageType('LaneSegReq', (_message.Message,), {
  'DESCRIPTOR' : _LANESEGREQ,
  '__module__' : 'road_seg_pb2'
  # @@protoc_insertion_point(class_scope:minieye.lane.LaneSegReq)
  })
_sym_db.RegisterMessage(LaneSegReq)

ScaleWindow = _reflection.GeneratedProtocolMessageType('ScaleWindow', (_message.Message,), {
  'DESCRIPTOR' : _SCALEWINDOW,
  '__module__' : 'road_seg_pb2'
  # @@protoc_insertion_point(class_scope:minieye.lane.ScaleWindow)
  })
_sym_db.RegisterMessage(ScaleWindow)

SegMask = _reflection.GeneratedProtocolMessageType('SegMask', (_message.Message,), {
  'DESCRIPTOR' : _SEGMASK,
  '__module__' : 'road_seg_pb2'
  # @@protoc_insertion_point(class_scope:minieye.lane.SegMask)
  })
_sym_db.RegisterMessage(SegMask)

LaneSegResMeta = _reflection.GeneratedProtocolMessageType('LaneSegResMeta', (_message.Message,), {
  'DESCRIPTOR' : _LANESEGRESMETA,
  '__module__' : 'road_seg_pb2'
  # @@protoc_insertion_point(class_scope:minieye.lane.LaneSegResMeta)
  })
_sym_db.RegisterMessage(LaneSegResMeta)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _LANESEGREQ._serialized_start=65
  _LANESEGREQ._serialized_end=163
  _SCALEWINDOW._serialized_start=165
  _SCALEWINDOW._serialized_end=279
  _SEGMASK._serialized_start=282
  _SEGMASK._serialized_end=443
  _LANESEGRESMETA._serialized_start=446
  _LANESEGRESMETA._serialized_end=610
# @@protoc_insertion_point(module_scope)
