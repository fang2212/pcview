# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: vehicle.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import geometry_pb2 as geometry__pb2
import data_source_pb2 as data__source__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\rvehicle.proto\x12\nperception\x1a\x0egeometry.proto\x1a\x11\x64\x61ta_source.proto\"\x97\t\n\x07Vehicle\x12\x10\n\x08\x66rame_id\x18\x01 \x01(\x04\x12\x11\n\ttimestamp\x18\x02 \x01(\x04\x12;\n\x0cvehicle_list\x18\x03 \x03(\x0b\x32%.perception.Vehicle.VehicleMeasureRes\x12;\n\x0fvehicle_warning\x18\x04 \x01(\x0b\x32\".perception.Vehicle.VehicleWarning\x12/\n\x05state\x18\x05 \x01(\x0b\x32 .perception.Vehicle.VehicleState\x12(\n\x0b\x64\x61ta_source\x18\n \x01(\x0e\x32\x13.minieye.DataSource\x1a\xaf\x05\n\x11VehicleMeasureRes\x12+\n\x08\x64\x65t_rect\x18\x01 \x01(\x0b\x32\x19.perception.common.Rect2f\x12+\n\x08reg_rect\x18\x02 \x01(\x0b\x32\x19.perception.common.Rect2f\x12-\n\ntrack_rect\x18\x03 \x01(\x0b\x32\x19.perception.common.Rect2f\x12.\n\x0bsmooth_rect\x18\x04 \x01(\x0b\x32\x19.perception.common.Rect2f\x12\x12\n\nconfidence\x18\x05 \x01(\x02\x12\x10\n\x08hit_type\x18\x06 \x01(\x05\x12\x15\n\rvehicle_class\x18\x07 \x01(\x05\x12\x12\n\nvehicle_id\x18\x08 \x01(\x05\x12\x11\n\ttrack_cnt\x18\t \x01(\x05\x12\x14\n\x0ctrack_status\x18\n \x01(\x05\x12\x18\n\x10track_confidence\x18\x0b \x01(\x02\x12\x15\n\rvehicle_width\x18\x0c \x01(\x02\x12\x16\n\x0evehicle_height\x18\r \x01(\x02\x12\x16\n\x0elongitude_dist\x18\x0e \x01(\x02\x12\x14\n\x0clateral_dist\x18\x0f \x01(\x02\x12\x19\n\x11rel_lateral_speed\x18\x10 \x01(\x02\x12\x11\n\trel_speed\x18\x11 \x01(\x02\x12\x11\n\tspeed_acc\x18\x12 \x01(\x02\x12\x0f\n\x07headway\x18\x13 \x01(\x02\x12\x0b\n\x03ttc\x18\x14 \x01(\x02\x12\x10\n\x08on_route\x18\x15 \x01(\x08\x12\x10\n\x08is_still\x18\x16 \x01(\x08\x12\x14\n\x0crel_slowdown\x18\x17 \x01(\x08\x12\x12\n\nis_crucial\x18\x18 \x01(\x08\x12\x19\n\x11is_second_crucial\x18\x19 \x01(\x08\x12\x12\n\npose_class\x18\x1a \x01(\x05\x12\x14\n\x0ctrace_status\x18\x1b \x01(\x05\x1a\xa9\x01\n\x0eVehicleWarning\x12\x12\n\nvehicle_id\x18\x01 \x01(\x05\x12\x0f\n\x07headway\x18\x02 \x01(\x02\x12\x15\n\rwarning_level\x18\x03 \x01(\x05\x12\x0b\n\x03\x66\x63w\x18\x04 \x01(\x05\x12\x0c\n\x04ufcw\x18\x05 \x01(\x05\x12\x17\n\x0fheadway_warning\x18\x06 \x01(\x05\x12\x12\n\nvb_warning\x18\x07 \x01(\x05\x12\x13\n\x0bsag_warning\x18\x08 \x01(\x05\x1a\x34\n\x0cVehicleState\x12\x11\n\tfcw_state\x18\x01 \x01(\x05\x12\x11\n\thmw_state\x18\x02 \x01(\x05\x62\x06proto3')



_VEHICLE = DESCRIPTOR.message_types_by_name['Vehicle']
_VEHICLE_VEHICLEMEASURERES = _VEHICLE.nested_types_by_name['VehicleMeasureRes']
_VEHICLE_VEHICLEWARNING = _VEHICLE.nested_types_by_name['VehicleWarning']
_VEHICLE_VEHICLESTATE = _VEHICLE.nested_types_by_name['VehicleState']
Vehicle = _reflection.GeneratedProtocolMessageType('Vehicle', (_message.Message,), {

  'VehicleMeasureRes' : _reflection.GeneratedProtocolMessageType('VehicleMeasureRes', (_message.Message,), {
    'DESCRIPTOR' : _VEHICLE_VEHICLEMEASURERES,
    '__module__' : 'vehicle_pb2'
    # @@protoc_insertion_point(class_scope:perception.Vehicle.VehicleMeasureRes)
    })
  ,

  'VehicleWarning' : _reflection.GeneratedProtocolMessageType('VehicleWarning', (_message.Message,), {
    'DESCRIPTOR' : _VEHICLE_VEHICLEWARNING,
    '__module__' : 'vehicle_pb2'
    # @@protoc_insertion_point(class_scope:perception.Vehicle.VehicleWarning)
    })
  ,

  'VehicleState' : _reflection.GeneratedProtocolMessageType('VehicleState', (_message.Message,), {
    'DESCRIPTOR' : _VEHICLE_VEHICLESTATE,
    '__module__' : 'vehicle_pb2'
    # @@protoc_insertion_point(class_scope:perception.Vehicle.VehicleState)
    })
  ,
  'DESCRIPTOR' : _VEHICLE,
  '__module__' : 'vehicle_pb2'
  # @@protoc_insertion_point(class_scope:perception.Vehicle)
  })
_sym_db.RegisterMessage(Vehicle)
_sym_db.RegisterMessage(Vehicle.VehicleMeasureRes)
_sym_db.RegisterMessage(Vehicle.VehicleWarning)
_sym_db.RegisterMessage(Vehicle.VehicleState)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _VEHICLE._serialized_start=65
  _VEHICLE._serialized_end=1240
  _VEHICLE_VEHICLEMEASURERES._serialized_start=327
  _VEHICLE_VEHICLEMEASURERES._serialized_end=1014
  _VEHICLE_VEHICLEWARNING._serialized_start=1017
  _VEHICLE_VEHICLEWARNING._serialized_end=1186
  _VEHICLE_VEHICLESTATE._serialized_start=1188
  _VEHICLE_VEHICLESTATE._serialized_end=1240
# @@protoc_insertion_point(module_scope)
